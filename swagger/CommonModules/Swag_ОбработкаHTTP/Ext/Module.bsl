Функция ПроверитьПараметры(ИмяСервиса, ИмяМетода, Запрос) Экспорт
	
	Возврат "";
	
КонецФункции

Функция ПроверитьОтвет(ИмяСервиса, ИмяМетода, Ответ, ЗаписыватьОшибкуВЖурналРегистрации = Истина) Экспорт
	
	Попытка
		МодульОписанияHTTPСервиса = ОбщегоНазначения.ОбщийМодуль(ИмяСервиса + "Описание");
		Описание = МодульОписанияHTTPСервиса.ПолучитьОписаниеHTTPСервиса();
		Объекты = МодульОписанияHTTPСервиса.ПолучитьОбъектыHTTPСервиса();
	Исключение
	КонецПопытки;
	
	ИмяСобытияЖурналаРегистрации = "Swagger: проверка корректности HTTP ответа";
	ТекстМетодСервис = "метода """ + ИмяМетода + """ HTTP сервиса """ + ИмяСервиса + """";
	
	СообщениеОбОшибке = "";
	
	ОписаниеМетода = ПолучитьЗначениеОписанияМетода(Описание, ИмяМетода, "Описание");
	Если ЗначениеЗаполнено(ОписаниеМетода) Тогда
		
		ОтветыМетода = ПолучитьМассивЭлементовОписания(Описание, ИмяМетода, "Ответы");
		Если ОтветыМетода.Количество() > 0 Тогда
			
			ОтветМетода = ПолучитьОтветПоКоду(ОтветыМетода, Ответ.КодСостояния);
			Если ОтветМетода = Неопределено Тогда
				СообщениеОбОшибке = НСтр("ru = 'Для " + ТекстМетодСервис + " не определён код ответа " + Ответ.КодСостояния + ".'");
			Иначе
				Если ТипЗнч(ОтветМетода.МассивТиповMIME) = Тип("Массив") И ОтветМетода.МассивТиповMIME.Количество() > 0 Тогда
					
					ТипMIMEОтвета = Ответ.Заголовки.Получить("Content-Type");
					Если ТипMIMEОтвета = Неопределено Тогда
						СообщениеОбОшибке = НСтр("ru = 'Для " + ТекстМетодСервис + " в ответе не задан тип MIME.'");
					Иначе
						НайденТипMIME = Ложь;
						Для каждого ТипMIME Из ОтветМетода.МассивТиповMIME Цикл
							Если ТипMIME.Заголовок = ТипMIMEОтвета Тогда
								НайденТипMIME = Истина;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						Если Не НайденТипMIME Тогда
							СообщениеОбОшибке = НСтр("ru = 'Для " + ТекстМетодСервис + " в ответе возвращается не описанный в документации тип MIME.'");
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			СообщениеОбОшибке = НСтр("ru = 'Не заданы варианты ответов " + ТекстМетодСервис + ".'");
		КонецЕсли;
		
	Иначе
		СообщениеОбОшибке = НСтр("ru = 'Отсутствует swagger описание " + ТекстМетодСервис + ".'");
	КонецЕсли;
	
	Если Не ПустаяСтрока(СообщениеОбОшибке) Тогда
		Если ЗаписыватьОшибкуВЖурналРегистрации Тогда
			ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка,,, СообщениеОбОшибке);
		Иначе
			Возврат ПолучитьОтветОшибки(СообщениеОбОшибке, Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

Функция ПолучитьМассивЭлементовОписания(Описание, Метод, ЭлементОписания) Экспорт
	
	Параметры = Новый Массив;
	
	Если ТипЗнч(Описание) = Тип("Массив") Тогда
		
		Для каждого ДанныеОписания Из Описание Цикл
			Если ТипЗнч(ДанныеОписания) = Тип("Структура") И ДанныеОписания.Свойство("Имя") Тогда
				Если ДанныеОписания.Имя = Метод И ДанныеОписания.Свойство(ЭлементОписания) Тогда
					ПараметрыМетода = Неопределено;
					ДанныеОписания.Свойство(ЭлементОписания, ПараметрыМетода);
					Если ТипЗнч(ПараметрыМетода) = Тип("Массив") Тогда
						Параметры = ПараметрыМетода;
					КонецЕсли;
					
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

Функция ПолучитьЗначениеОписанияМетода(Описание, Метод, ЭлементОписания) Экспорт
	
	ОписаниеМетода = Неопределено;
	
	Если ТипЗнч(Описание) = Тип("Массив") Тогда
		
		Для каждого ДанныеОписания Из Описание Цикл
			Если ТипЗнч(ДанныеОписания) = Тип("Структура") И ДанныеОписания.Свойство("Имя") Тогда
				Если ДанныеОписания.Имя = Метод И ДанныеОписания.Свойство(ЭлементОписания) Тогда
					ЗначениеМетода = Неопределено;
					ДанныеОписания.Свойство(ЭлементОписания, ЗначениеМетода);
					ОписаниеМетода = ЗначениеМетода;
					
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ОписаниеМетода;
	
КонецФункции

Функция ПолучитьОтветПоКоду(ОтветыМетода, Код)
	
	НайденныйОтветМетода = Неопределено;
	
	Если ТипЗнч(ОтветыМетода) = Тип("Массив") Тогда
		Для каждого ОтветМетода Из ОтветыМетода Цикл
			Если ТипЗнч(ОтветМетода) = Тип("Структура") И ОтветМетода.Свойство("Код") Тогда
				Если ОтветМетода.Код = Код Тогда
					НайденныйОтветМетода = ОтветМетода;
					
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат НайденныйОтветМетода;
	
КонецФункции

Функция ПолучитьОтветОшибки(ТекстОшибки, ЭтоЗапрос) Экспорт
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(, Символы.Таб);
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	
	ЗаписьJSON.ЗаписатьИмяСвойства("subject");
	ЗаписьJSON.ЗаписатьЗначение("Сообщение выдано из-за несоответствия описания HTTP сервиса и параметров " + ?(ЭтоЗапрос, "запроса", "ответа") + ". Необходимо привести описание в соответствии с кодом (рекомендуется) или убрать функцию проверки.");
	
	ЗаписьJSON.ЗаписатьИмяСвойства("message");
	ЗаписьJSON.ЗаписатьЗначение(Строка(ТекстОшибки));
	
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	Ответ = Новый HTTPСервисОтвет(500);
	Ответ.Заголовки.Вставить("Content-Type", "application/json");
	Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
	
	Возврат Ответ;
	
КонецФункции